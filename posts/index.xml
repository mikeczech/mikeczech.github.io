<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on MLOops.dev</title>
    <link>https://mikeczech.github.io/posts/</link>
    <description>Recent content in Posts on MLOops.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 21:48:24 +0200</lastBuildDate>
    
	<atom:link href="https://mikeczech.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>5 Lessons from Two Years of ML Engineering</title>
      <link>https://mikeczech.github.io/posts/ml-engineering-five-lessons/</link>
      <pubDate>Sat, 18 Apr 2020 21:48:24 +0200</pubDate>
      
      <guid>https://mikeczech.github.io/posts/ml-engineering-five-lessons/</guid>
      <description>Today, an increasing number of companies understand that data science isn’t just about presenting insights from data analysis to decision makers, but about building data science applications such as recommendation systems or spam filters. Thus, data science teams often not only consist of data scientists, but also of machine learning engineers who bridge the gap between data science and software engineering.
I’m a machine learning engineer for two years now and want to share five lessons I’ve learned while working on a variety of products.</description>
    </item>
    
    <item>
      <title>Thoughts on Pair Programming</title>
      <link>https://mikeczech.github.io/posts/pair-programming/</link>
      <pubDate>Sat, 01 Sep 2018 13:49:41 +0200</pubDate>
      
      <guid>https://mikeczech.github.io/posts/pair-programming/</guid>
      <description>Pair programming! Apparently, there is no other agile practice that divides the dev community as this one. On one side, there are the evangelists who advocate full-time pair programming as the only means to write high-quality software. There also exist companies like Pivotal that have made this view an integral part of their culture. On the other side, there are developers who insist to work quietly on their own.
Developer misconception #1: I do my best work with headphones on</description>
    </item>
    
  </channel>
</rss>