<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on MLOops.dev</title>
    <link>https://mloops.dev/tags/testing/</link>
    <description>Recent content in testing on MLOops.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Apr 2020 21:48:24 +0200</lastBuildDate><atom:link href="https://mloops.dev/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Five Lessons from Two Years of ML Engineering</title>
      <link>https://mloops.dev/posts/ml-engineering-five-lessons/</link>
      <pubDate>Sat, 18 Apr 2020 21:48:24 +0200</pubDate>
      
      <guid>https://mloops.dev/posts/ml-engineering-five-lessons/</guid>
      <description>Today, an increasing number of companies understand that data science isnâ€™t just about presenting insights from data analysis to decision makers, but about building data science applications such as recommendation systems or spam filters. Thus, data science teams often not only consist of data scientists, but also of machine learning engineers who bridge the gap between data science and software engineering.
Here, I want to share five lessons I&amp;rsquo;ve learned in the past two years working as a machine learning engineer on a variety of products.</description>
    </item>
    
    <item>
      <title>Concolic Testing With KLEE</title>
      <link>https://mloops.dev/posts/klee/</link>
      <pubDate>Thu, 07 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>https://mloops.dev/posts/klee/</guid>
      <description>In this blog post, I&amp;rsquo;d like to introduce an automatic way to test a program. Software testing isn&amp;rsquo;t a trivial task though and it&amp;rsquo;s quite unlikely that it can be automated entirely (at least in the near future). Nevertheless, there is an interesting technique called Concolic Testing which can do this to some degree.
What is Concolic Testing? Concolic Testing combines concrete and symbolic execution for generating test-case suites where &amp;ldquo;Concolic&amp;rdquo; is a portmanteau word consisting of the words &amp;ldquo;Concrete&amp;rdquo; and &amp;ldquo;Symbolic&amp;rdquo;.</description>
    </item>
    
  </channel>
</rss>
